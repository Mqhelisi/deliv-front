{"version":3,"sources":["components/Navbar.js","components/Navbar2.js","components/pages/login.js","components/Button.js","components/PaginPack.js","components/PaginDeliv.js","BodySection.js","components/pages/Home.js","components/AddForm2.js","components/pages/Client.js","components/AddMvr.js","components/Dropdown.js","components/pages/Mover.js","components/AddDeliv.js","components/pages/Delivery.js","components/AddPack.js","components/pages/Package.js","components/Paginated.js","components/pages/ClientView.js","components/pages/DeliveryView.js","components/pages/PackageView.js","components/PaginMover.js","components/pages/MoverView.js","components/PaginRoute.js","components/pages/RouteView.js","App.js","components/useToken.js","index.js"],"names":["Navbar","useState","click","setClick","setButton","closMobileMenu","window","addEventListener","innerWidth","className","to","onClick","icon","faTimes","faBars","Navbar2","loginUser","credentials","a","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","align","onSubmit","htmlFor","type","name","placeholder","onChange","target","value","STYLES","SIZES","Button","children","buttonStyle","buttonSize","linkto","checkButtonStyle","includes","checkButtonSize","variant","PaginPack","players","stplayers","modalInfo","setModalInfo","setShowModal","show","setShow","handleClose","handleShow","useEffect","res","console","log","rowEvents","row","toggleTrueFalse","ModalContent","Modal","onHide","Header","closeButton","Title","package_id","Body","Footer","keyField","columns","dataField","sort","text","pagination","paginationFactory","PaginDeliv","client_id","BodySection","Home","AddClient","values","date","email","address","phonenmb","response","message","alert","AddForm","setClient_id","setEmail","setAddress","setPhonenmb","Client","AddMover","mover_id","setMover_id","Values","props","state","colours","items","i","this","maxValue","push","setState","id","valuesList","length","map","item","React","Component","Mover","delivery_id","route","client","delivDate","deliv_date","mover","setDelivery_id","setdeliv_date","setClient","setMover","setRoute","Delivery","AddPack","status","setPackage_id","setDeliv_date","Package","Pagination","getPlayerData","ClientView","DeliverView","PackageView","MoverView","PaginMover","route_id","RouteView","PaginRoute","App","tokenString","sessionStorage","getItem","userToken","parse","getToken","setItem","useToken","path","exact","component","DeliveryView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f477b530.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faBars, faTimes, faAnkh} from '@fortawesome/free-solid-svg-icons'\r\n// import { Button } from './Button';\r\nimport './Navbar.css' \r\n\r\nfunction Navbar(){\r\n    const [click, setClick] = useState(false);\r\n    const handleClick = () => setClick(!click);\r\n    const [button, setButton] = useState(true);\r\n    const closMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(false);\r\n        }\r\n    }\r\n    window.addEventListener('resize',showButton)\r\n    return (\r\n\r\n        <>\r\n        <nav className = 'navbar navbar-dark bg-dark'>\r\n            <div className='navbar-container'>\r\n                <Link to='/' className='navbar-logo'  onClick={closMobileMenu}>\r\n                    Trans Project \r\n                    {/* <FontAwesomeIcon icon={faAnkh}/> */}\r\n                </Link>\r\n\r\n                <div className='menu-icon' onClick={handleClick}> \r\n                    <FontAwesomeIcon icon={click ? faTimes: faBars}/>\r\n                </div>\r\n                <ul className={click ? 'nav-menu active': 'nav-menu'}>\r\n                <li className='nav-item'>\r\n                    <Link to='/' className='nav-links' onClick={closMobileMenu}>\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link to='/clientele' className='nav-links' onClick={closMobileMenu}>\r\n                        New Client\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link to='/moverr' className='nav-links' onClick={closMobileMenu}>\r\n                        New Mover\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link to='/pack' className='nav-links' onClick={closMobileMenu}>\r\n\r\n                    New Package\r\n                </Link>\r\n                </li>\r\n\r\n                <li className='nav-item'>\r\n                    <Link to='/delivs' className='nav-links' onClick={closMobileMenu}>\r\n                        New Delivery\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link to='/route' className='nav-links' onClick={closMobileMenu}>\r\n                        New Route\r\n                    </Link>\r\n                </li>\r\n\r\n              </ul>\r\n            </div>\r\n              {/* {button && <Button buttonStyle='btn--outline'>Heat Plans</Button>} */}\r\n        </nav>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","import {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faBars, faTimes, faAnkh} from '@fortawesome/free-solid-svg-icons'\r\n// import { Button } from './Button';\r\nimport './Navbar.css' \r\n\r\nfunction Navbar2(){\r\n    const [click, setClick] = useState(false);\r\n    const handleClick = () => setClick(!click);\r\n    const [button, setButton] = useState(true);\r\n    const closMobileMenu = () => setClick(false);\r\n\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(false);\r\n        }\r\n    }\r\n    window.addEventListener('resize',showButton)\r\n    return (\r\n\r\n        <>\r\n        <nav className = 'navbar navbar-dark bg-dark'>\r\n            <div className='navbar-container'>\r\n                <Link to='/' className='navbar-logo'  onClick={closMobileMenu}>\r\n                    Trans Project \r\n                    {/* <FontAwesomeIcon icon={faAnkh}/> */}\r\n                </Link>\r\n\r\n                <div className='menu-icon' onClick={handleClick}> \r\n                    <FontAwesomeIcon icon={click ? faTimes: faBars}/>\r\n                </div>\r\n                <ul className={click ? 'nav-menu active': 'nav-menu'}>\r\n                <li className='nav-item'>\r\n                    <Link to='/pack' className='nav-links' onClick={closMobileMenu}>\r\n                    New Package\r\n                </Link>\r\n                </li>\r\n\r\n                <li className='nav-item'>\r\n                    <Link to='/delivs' className='nav-links' onClick={closMobileMenu}>\r\n                        New Delivery\r\n                    </Link>\r\n                </li>\r\n\r\n              </ul>\r\n            </div>\r\n              {/* {button && <Button buttonStyle='btn--outline'>Heat Plans</Button>} */}\r\n        </nav>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar2;","import React, { useState } from 'react';\r\n// import loginImg from \"../../login.svg\";\r\nimport PropTypes from 'prop-types';\r\nimport './login.css';\r\nimport '../Adder.css'\r\n\r\nasync function loginUser(credentials) {\r\n    return fetch('/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(credentials)\r\n    })\r\n      .then(data => data.json())\r\n   }\r\n\r\n\r\n\r\nexport default function Login({setToken }) {\r\n    const [username, setUserName] = useState();\r\n    const [password, setPassword] = useState();\r\n    \r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await loginUser({\r\n          username,\r\n          password\r\n        });\r\n        setToken(token);\r\n      }\r\n      \r\n        return (\r\n        \r\n        <div className='form-box'>\r\n            <h1 align=\"center\" >Login</h1>\r\n            <div className='login-wrapper'>\r\n                <div className='image'>\r\n                    {/* <img src={loginImg}/> */}\r\n                </div>\r\n            <form onSubmit={handleSubmit}>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='username'>Username</label>\r\n                                <input type='text' name='username' placeholder='username' onChange={e => setUserName(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='password'>Password</label>\r\n                                <input type='password' name='password' placeholder='password' onChange={e => setPassword(e.target.value)}/>\r\n                                \r\n                            </div>\r\n                            <div>\r\n                            <button type=\"submit\">Submit</button>\r\n                            </div>\r\n            </form>\r\n            </div>\r\n            \r\n        </div>)\r\n    \r\n}\r\n\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n  }","import './Button.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize,\r\n    linkto\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle)\r\n    ? buttonStyle\r\n    :STYLES[0];\r\n    const links = linkto\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n    return (\r\n<>\r\n\r\n        <Link to={linkto} className='btn-mobile'>\r\n            <button className = {`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n                onClick={onClick}\r\n                type={type}\r\n                variant=\"flat\"\r\n                // size=\"xxl\"\r\n            >\r\n                {children}\r\n            </button>\r\n        </Link>\r\n\r\n</>\r\n    )\r\n}","import React, {useState, useEffect} from 'react'\r\nimport BootstrapTable from \"react-bootstrap-table-next\"\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport {Modal, Button} from \"react-bootstrap\";\r\nimport './Paginator.css';\r\n\r\n\r\nconst PaginPack = () => {\r\n    const [players, stplayers] = useState([]);\r\n    const [modalInfo, setModalInfo] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const  [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    \r\n    useEffect(()=>{\r\n        fetch(\"/package\").then(\r\n            res => res.json()\r\n        ).then(\r\n            data=> {\r\n                stplayers(data)\r\n                console.log(data)\r\n            }\r\n        )\r\n    },[])\r\n\r\nconst columns =[\r\n    {dataField: \"package_id\", sort: true, text: \"Package Name\"},\r\n    {dataField: \"date\", sort: true, text: \"Input Date\"},\r\n    {dataField: \"delivDate\", sort: true, text: \"Date of Delivery\"},\r\n    {dataField: \"client\", sort: true, text: \"Client Name\"},\r\n    {dataField: \"status\", sort: true, text: \"Package Status\"},\r\n    \r\n]\r\n\r\nconst rowEvents ={\r\n    onClick: (e,row)=>  {\r\n       console.log(row) \r\n       setModalInfo(row);\r\n       toggleTrueFalse();\r\n    }\r\n}\r\nconst toggleTrueFalse = () => {\r\n    setShowModal(handleShow);\r\n}\r\n\r\nconst ModalContent = () => {\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{modalInfo.package_id}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* <h4>Invoice: {modalInfo.Invoice}</h4>\r\n                <h4>Salesperson: {modalInfo.Salesperson}</h4>\r\n                <h4>Tax: {modalInfo.Tax}</h4>\r\n                <h4>Pay Status: {modalInfo.Status}</h4>\r\n                <h4>Date: {modalInfo.Date}</h4>\r\n\r\n                <h2>Amount: {modalInfo.Amount}</h2> */}\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n    return(\r\n        <div className=\"pagin2\">\r\n        <h3 align='center'>Open Packages</h3>\r\n        <BootstrapTable\r\n        keyField=\"name\"\r\n        data={players}\r\n        columns={columns}\r\n        pagination={paginationFactory()}\r\n        rowEvents={rowEvents}/>\r\n\r\n        {show ? <ModalContent/> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaginPack;","import React, {useState, useEffect} from 'react'\r\nimport BootstrapTable from \"react-bootstrap-table-next\"\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport {Modal, Button} from \"react-bootstrap\";\r\nimport './Paginator.css';\r\n\r\nconst PaginDeliv = () => {\r\n    const [players, stplayers] = useState([]);\r\n    const [modalInfo, setModalInfo] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const  [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(()=>{\r\n        fetch(\"/delivery\").then(\r\n            res => res.json()\r\n        ).then(\r\n            data=> {\r\n                stplayers(data)\r\n                console.log(data)\r\n            }\r\n        )\r\n    },[])\r\n\r\n\r\nconst columns =[\r\n    {dataField: \"delivery_id\", sort: true, text: \"Delivery Name\"},\r\n    {dataField: \"mover\", sort: true, text: \"Address\"},\r\n    {dataField: \"date\", sort: true, text: \"Input Date\"},\r\n    {dataField: \"delivDate\", sort: true, text: \"Date of Delivery\"},\r\n    {dataField: \"client\", sort: true, text: \"Client Name\"},\r\n    {dataField: \"route\", sort: true, text: \"Route Taken\"},\r\n    {dataField: \"status\", sort: true, text: \"Package Status\"},\r\n\r\n]\r\n\r\nconst rowEvents ={\r\n    onClick: (e,row)=>  {\r\n       console.log(row)\r\n       setModalInfo(row);\r\n       toggleTrueFalse();\r\n    }\r\n}\r\nconst toggleTrueFalse = () => {\r\n    setShowModal(handleShow);\r\n}\r\nconst ModalContent = () => {\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{modalInfo.client_id}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* <h4>Invoice: {modalInfo.Invoice}</h4>\r\n                <h4>Salesperson: {modalInfo.Salesperson}</h4>\r\n                <h4>Tax: {modalInfo.Tax}</h4>\r\n                <h4>Pay Status: {modalInfo.Status}</h4>\r\n                <h4>Date: {modalInfo.Date}</h4>\r\n\r\n                <h2>Amount: {modalInfo.Amount}</h2> */}\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n    return(\r\n        <div className='pagin'>\r\n        <h3 align='center'>Pending Deliveries</h3>\r\n        <BootstrapTable\r\n        keyField=\"name\"\r\n        data={players}\r\n        columns={columns}\r\n        pagination={paginationFactory()}\r\n        rowEvents={rowEvents}\r\n        />\r\n\r\n        {show ? <ModalContent/> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default PaginDeliv;","import {React} from 'react';\r\nimport {Button} from './components/Button';\r\nimport './BodySection.css'\r\n\r\nimport PaginPack from './components/PaginPack';\r\nimport PaginDeliv from './components/PaginDeliv';\r\n\r\n// import '../App.css'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faPlay } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction BodySection() {\r\n\r\n    return(\r\n    <>\r\n            <div className='hero-container'>\r\n        {/* <video src='..videos/video-1.mp4' autoPlay loop muted/> */}\r\n        <h2> Delivery Management Software</h2>\r\n        <p>Under construction...</p>\r\n        </div>\r\n        <PaginDeliv></PaginDeliv>\r\n        \r\n        <PaginPack/>\r\n        <div className='hero-container2'>\r\n            \r\n        <div className='hero-btns'>\r\n            <Button className='btns' buttonStyle = 'btn--outline'\r\n            buttonSize='btn--large' linkto='/clients'>View All Clients</Button>\r\n\r\n    <Button className='btns' buttonStyle = 'btn--primary'\r\n            buttonSize='btn--large' linkto='/movers'>View All Movers\r\n            {/* <FontAwesomeIcon icon= {faPlay}></FontAwesomeIcon> */}\r\n            </Button>\r\n\r\n            <Button className='btns' buttonStyle = 'btn--outline'\r\n            buttonSize='btn--large' linkto='/packs'>View All Packages</Button>\r\n\r\n    <Button className='btns' buttonStyle = 'btn--primary'\r\n            buttonSize='btn--large' linkto='/delivss'>View All Deliveries\r\n            {/* <FontAwesomeIcon icon= {faPlay}></FontAwesomeIcon> */}\r\n            </Button>\r\n\r\n            <Button className='btns' buttonStyle = 'btn--primary'\r\n            buttonSize='btn--large' linkto='/routess'>View All Routes\r\n            {/* <FontAwesomeIcon icon= {faPlay}></FontAwesomeIcon> */}\r\n            </Button>\r\n\r\n\r\n        </div>\r\n        </div>\r\n    </>\r\n\r\n        )\r\n    \r\n}\r\n\r\nexport default BodySection;","import React from 'react'\r\nimport '../../App.css'\r\nimport BodySection from '../../BodySection' \r\n// import Pagination from '../Paginated'\r\n// import Cards from '../Cards'\r\n\r\nfunction Home() {\r\n\r\n    // constructor(props){\r\n    //     super(props);\r\n\r\n    //     this.state={\r\n    //         deliveries:[]\r\n    //     }\r\n    // }\r\n\r\n    return(\r\n        <>\r\n        <BodySection/>\r\n        {/* <Pagination/> */}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport './Adder.css'\r\n\r\nasync function AddClient(values) {\r\n\r\n    fetch('/client',{\r\n      method: 'POST',\r\n      body:JSON.stringify({\r\n          client_id: values.client_id,\r\n          date: values.date,\r\n          email: values.email,\r\n          address:values.address,\r\n        phonenmb: values.phonenmb\r\n      }),\r\n      headers:{\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n      }\r\n  }).then(response => response.json())\r\n  .then(message => {\r\n      alert(message)\r\n      \r\n  })\r\n   }\r\n\r\n\r\n\r\nexport default function AddForm({}) {\r\n    const [client_id, setClient_id] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [phonenmb, setPhonenmb] = useState();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await AddClient({\r\n            client_id,\r\n            email,\r\n            address,\r\n            phonenmb\r\n        });\r\n        // alert(\"Your client has been added\")\r\n        // setToken(token);\r\n      }\r\n\r\n        return (\r\n\r\n        <div className='form-box'>\r\n            <div className='header'>Add A Client to System</div>\r\n            <div className='login-wrapper'>\r\n                <div className='image'>\r\n                    {/* <img src={loginImg}/> */}\r\n                </div>\r\n            <form onSubmit={handleSubmit}>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='client_id'>Client Name</label>\r\n                                <input type='text' name='client_id' placeholder='Client Name' onChange={e => setClient_id(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='email'>Email Address</label>\r\n                                <input type='text' name='email' placeholder='Email Address' onChange={e => setEmail(e.target.value)}/>\r\n                                \r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='address'>Address</label>\r\n                                <input type='text' name='address' placeholder='Address' onChange={e => setAddress(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='phonenmb'>Phone Number</label>\r\n                                <input type='text' name='phonenmb' placeholder='Phone Number' onChange={e => setPhonenmb(e.target.value)}/>\r\n                                \r\n                            </div>\r\n                            <div>\r\n                            <button type=\"submit\">Add Client</button>\r\n                            </div>\r\n            </form>\r\n            </div>\r\n            \r\n        </div>)\r\n    \r\n}\r\n","import React from 'react'\r\nimport '../../App.css'\r\nimport AddClient from '../AddForm2'\r\n\r\nfunction Client() {\r\n\r\n\r\n    return(\r\n        <>\r\n        <AddClient/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Client;","\r\n\r\nimport React, { useState } from 'react';\r\nimport './Adder.css'\r\n\r\nasync function AddMover(values) {\r\n\r\n    fetch('/mover',{\r\n      method: 'POST',\r\n      body:JSON.stringify({\r\n          mover_id: values.mover_id,\r\n          date: values.date,\r\n          email: values.email,\r\n          address:values.address,\r\n        phonenmb: values.phonenmb\r\n      }),\r\n      headers:{\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n      }\r\n  }).then(response => response.json())\r\n  .then(message => {\r\n      console.log(message)\r\n  })\r\n   }\r\n\r\n\r\n\r\nexport default function AddForm({}) {\r\n    const [mover_id, setMover_id] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [phonenmb, setPhonenmb] = useState();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await AddMover({\r\n            mover_id,\r\n            email,\r\n            address,\r\n            phonenmb\r\n        });\r\n        // setToken(token);\r\n        console.log('adssad')\r\n      }\r\n\r\n        return (\r\n\r\n        <div className='form-box'>\r\n            <div className='header'>Add A Mover to System</div>\r\n            <div className='login-wrapper'>\r\n                <div className='image'>\r\n                    {/* <img src={loginImg}/> */}\r\n                </div>\r\n            <form onSubmit={handleSubmit}>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='mover_id'>mover Name</label>\r\n                                <input type='text' name='mover_id' placeholder='mover Name' onChange={e => setMover_id(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='email'>Email Address</label>\r\n                                <input type='text' name='email' placeholder='Email Address' onChange={e => setEmail(e.target.value)}/>\r\n                                \r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='address'>Address</label>\r\n                                <input type='text' name='address' placeholder='Address' onChange={e => setAddress(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='phonenmb'>Phone Number</label>\r\n                                <input type='text' name='phonenmb' placeholder='Phone Number' onChange={e => setPhonenmb(e.target.value)}/>\r\n                                \r\n                            </div>\r\n                            <div>\r\n                            <button type=\"submit\">Add Client</button>\r\n                            </div>\r\n            </form>\r\n            </div>\r\n            \r\n        </div>)\r\n    \r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Values extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            values: [],\r\n            colours: {}\r\n        };\r\n    }\r\n    createSelectItems() {\r\n        let items = [];\r\n        for (let i = 0; i<=this.props.maxValue; i++){\r\n            items.push(<option key={i} value={i}>{i}</option>);\r\n        }\r\n        return items;\r\n    };\r\n    \r\n    onDropdownSelected(e)  {\r\n        console.log(\"Value\",e.target.value);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.setState({\r\n            values: [\r\n                {id: 'AFG',name:'Afghan'},\r\n                {id: 'AMR',name:'America'},\r\n\r\n            ]\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const {values} = this.state;\r\n\r\n        let valuesList = values.length > 0\r\n        && values.map((item,i) => {\r\n            return(\r\n                <option key={i} value={item.id}>{item.name}</option>\r\n            )\r\n        }, this);\r\n        return (\r\n            <div>\r\n                <sekect>\r\n                    {valuesList}\r\n                </sekect>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default Values;","import React from 'react'\r\nimport '../../App.css'\r\nimport AddMover from '../AddMvr'\r\nimport Values from '../Dropdown'\r\nfunction Mover() {\r\n\r\n    return(\r\n        <>\r\n        <AddMover/>\r\n        <Values/>\r\n        </>\r\n    )\r\n}\r\nexport default Mover;","// import {useState, useRef} from 'react'\r\n// // import Container from 'react-bootstrap/Container';\r\n// // import Form from 'react-bootstrap/Form';\r\n// // import FormLabel from 'react-bootstrap/FormLabel'; \r\n// import {Formik, Form, useField} from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n\r\n// const CustomTextInput = ({label, ...props}) => {\r\n//   const [field, meta] = useField(props);\r\n\r\n//   return (\r\n//     <>\r\n//     {/* <label htmlFor={props.id || props.name}> {label}</label> */}\r\n//     <input className='text-input'{...field} {...props} placeholder={label}/>\r\n\r\n//     {meta.touched && meta.error ? (\r\n//       <div className=\"error\">{meta.error}</div>\r\n//     ): null}\r\n//     </>\r\n//   )\r\n// }\r\n\r\n\r\n// function AddDeliv(){\r\n\r\n//     return(\r\n//     <Formik initialValues={{\r\n//       delivery_id: '',\r\n//       date: '',\r\n//       client: '',\r\n//       mover:'',\r\n//       delivDate:'',\r\n//       route:'',\r\n//       status:''\r\n\r\n//     }}\r\n//     validationSchema={Yup.object({\r\n//       delivery_id: Yup.string()\r\n//       .min(3, 'Must be at least 4 characters')\r\n//       .max(24,'Must be up to 23 characters')\r\n//       .required('Required!'),\r\n//       date: Yup.date()\r\n//       .required('Required'),\r\n//       client: Yup.string()\r\n//       .required('Required'),\r\n//       mover: Yup.string()\r\n//       .required('Required'),\r\n//       route: Yup.string()\r\n//       .required('Required'),\r\n//       delivDate: Yup.date()\r\n//       .required('Required'),\r\n//       status: Yup.string()\r\n//       .required('Required')\r\n//     })}\r\n//     onSubmit={(values, {setSubmitting, resetForm}) => {\r\n//       setTimeout(() => {\r\n\r\n//         fetch('/mover',{\r\n//             method: 'POST',\r\n//             body:JSON.stringify({\r\n//                 delivery_id: values.delivery_id,\r\n//                 date: values.date,\r\n//                 client: values.client,\r\n//                 mover: values.mover,\r\n//                 delivDate:values.delivDate,\r\n//                 route:values.route,\r\n//               status: values.status\r\n//             }\r\n//             ),\r\n//             headers:{\r\n//                 \"Content-type\": \"application/json; charset=UTF-8\"\r\n//             }\r\n//         }).then(response => response.json())\r\n//         .then(message => {\r\n//             console.log(message)\r\n//             resetForm()\r\n            \r\n//         })\r\n//         // alert(JSON.stringify(values, null, 2));\r\n//         setSubmitting(false)\r\n//       }, 1000)\r\n//     }} \r\n//     >\r\n//       {props => (\r\n//         <Form>\r\n//           <h1>Add a Delivery</h1>\r\n//           <div className='form-box'>\r\n//           <CustomTextInput label=\"Delivery Name\" name=\"delivery_id\" type=\"text\" placeholder=\"Collar\" \r\n//                           // onChange={changeName}\r\n//                           />\r\n//           {/* <CustomTextInput label=\"Date of Setup\" name=\"date\" type=\"date\"\r\n//                     // onChange={changeQuantity}\r\n//                     /> */}\r\n//           <CustomTextInput label=\"Client Name\" name=\"client\" type=\"text\" \r\n//                     // onChange={changePrice}\r\n//                     />\r\n//           <CustomTextInput label=\"Mover Name\" name=\"mover\" type=\"text\" placeholder=\"35\"\r\n//                     // onChange={changePrice}\r\n//                     />\r\n//           {/* <label>Delivery Date</label> */}\r\n//         <CustomTextInput label=\"Delivery Date\" name=\"delivDate\" type=\"date\" placeholder=\"35\"\r\n//                     // onChange={changePrice}\r\n//                     />\r\n//         <CustomTextInput label=\"Route\" name=\"route\" type=\"text\" placeholder=\"35\"\r\n//                     // onChange={changePrice}\r\n//                     />\r\n//                     <CustomTextInput label=\"Status\" name=\"status\" type=\"text\" placeholder=\"35\"\r\n//                     // onChange={changePrice}\r\n//                     />\r\n//           <button type=\"submit\">\r\n//             {props.isSubmitting ? 'Adding..': 'Submits'}</button>\r\n\r\n//           </div>\r\n//         </Form>\r\n\r\n//       )}\r\n//     </Formik>\r\n\r\n\r\n//     )\r\n// }\r\n\r\n\r\n// export default AddDeliv;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './Adder.css'\r\n\r\nasync function AddClient(values) {\r\n\r\n    fetch('/delivery',{\r\n      method: 'POST',\r\n      body:JSON.stringify({\r\n          delivery_id: values.delivery_id,\r\n          route: values.route,\r\n          client: values.client,\r\n          delivDate:values.deliv_date,\r\n        mover: values.mover\r\n      }),\r\n      headers:{\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n      }\r\n  }).then(response => response.json())\r\n  .then(message => {\r\n      alert(message)\r\n      \r\n  })\r\n   }\r\n\r\n\r\n\r\nexport default function AddForm({}) {\r\n    const [delivery_id, setDelivery_id] = useState();\r\n    const [deliv_date, setdeliv_date] = useState();\r\n    const [client, setClient] = useState();\r\n    const [mover, setMover] = useState();\r\n    const [route, setRoute] = useState();\r\n\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await AddClient({\r\n            delivery_id,\r\n            deliv_date,\r\n            client,\r\n            mover,\r\n            route\r\n        });\r\n        // alert(\"Your client has been added\")\r\n        // setToken(token);\r\n      }\r\n\r\n        return (\r\n\r\n        <div className='form-box'>\r\n            <div className='header'>Add A New Delivery</div>\r\n            <div className='login-wrapper'>\r\n                <div className='image'>\r\n                    {/* <img src={loginImg}/> */}\r\n                </div>\r\n            <form onSubmit={handleSubmit}>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='delivery_id'>Delivery ID</label>\r\n                                <input type='text' name='delivery_id' placeholder='Client Name' onChange={e => setDelivery_id(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='deliv_date'>Delivery date</label>\r\n                                <input type='date' name='deliv_date' placeholder='Delivery Date' onChange={e => setdeliv_date(e.target.value)}/>\r\n                                \r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='client'>Package Name</label>\r\n                                <input type='text' name='client' placeholder='client' onChange={e => setClient(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='mover'>Mover To Use</label>\r\n                                <input type='text' name='mover' placeholder='Mover' onChange={e => setMover(e.target.value)}/>\r\n                                \r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='route'>Route To Use</label>\r\n                                <input type='text' name='route' placeholder='route' onChange={e => setRoute(e.target.value)}/>\r\n                                \r\n                            </div>\r\n                            <div>\r\n                            <button type=\"submit\">Add Client</button>\r\n                            </div>\r\n            </form>\r\n            </div>\r\n            \r\n        </div>)\r\n    \r\n}\r\n","import React from 'react'\r\nimport '../../App.css'\r\nimport AddDeliv from '../AddDeliv'\r\n\r\nfunction Delivery() {\r\n\r\n\r\n    return(\r\n        <>\r\n        <AddDeliv/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Delivery;","// import {useState, useRef} from 'react'\r\n// // import Container from 'react-bootstrap/Container';\r\n// // import Form from 'react-bootstrap/Form';\r\n// // import FormLabel from 'react-bootstrap/FormLabel'; \r\n// import {Formik, Form, useField} from 'formik';\r\n// import * as Yup from 'yup';\r\n\r\n\r\n// const CustomTextInput = ({label, ...props}) => {\r\n//   const [field, meta] = useField(props);\r\n\r\n//   return (\r\n//     <>\r\n//     {/* <label htmlFor={props.id || props.name}> {label}</label> */}\r\n//     <input className='text-input'{...field} {...props} placeholder={label}/>\r\n\r\n//     {meta.touched && meta.error ? (\r\n//       <div className=\"error\">{meta.error}</div>\r\n//     ): null}\r\n//     </>\r\n//   )\r\n// }\r\n// function AddPack(){\r\n\r\n//     return(\r\n//     <Formik initialValues={{\r\n//       package_id: '',\r\n//       // date: '',\r\n//       client: '',\r\n//       delivDate:'',\r\n//       status:''\r\n\r\n//     }}\r\n//     validationSchema={Yup.object({\r\n//       package_id: Yup.string()\r\n//       .min(3, 'Must be at least 4 characters')\r\n//       .max(24,'Must be up to 23 characters')\r\n//       .required('Required!'),\r\n//       date: Yup.date()\r\n//       .required('Required'),\r\n//       client: Yup.string()\r\n//       .required('Required'),\r\n//       delivDate: Yup.date()\r\n//       .required('Required'),\r\n//       status: Yup.string()\r\n//       .required('Required')\r\n//     })}\r\n//     onSubmit={(values, {setSubmitting, resetForm}) => {\r\n//       setTimeout(() => {\r\n\r\n//         fetch('/package',{\r\n//             method: 'POST',\r\n//             body:JSON.stringify({\r\n//                 package_id: values.package_id,\r\n//                 date: values.date,\r\n//                 client: values.client,\r\n//                 delivDate:values.delivDate,\r\n//               status: values.status\r\n//             }\r\n//             ),\r\n//             headers:{\r\n//                 \"Content-type\": \"application/json; charset=UTF-8\"\r\n//             }\r\n//         }).then(response => response.json())\r\n//         .then(message => {\r\n//             console.log(message)\r\n//             resetForm()\r\n\r\n//         })\r\n//         setSubmitting(false)\r\n//       }, 1000)\r\n//     }} \r\n//     >\r\n//       {props => (\r\n//         <Form>\r\n//           <div className='form-box'>\r\n//           <h1>Add a Package</h1>\r\n//           <CustomTextInput label=\"Package Name\" name=\"package_id\" type=\"text\" placeholder=\"Collar\" \r\n//                           // onChange={changeName}\r\n//                           />\r\n//           <CustomTextInput label=\"Client Name\" name=\"client\" type=\"text\" placeholder=\"35\"\r\n//                     // onChange={changePrice}\r\n//                     />\r\n//         <CustomTextInput label=\"Delivery Date\" name=\"delivDate\" type=\"date\" placeholder=\"35\"\r\n//                     // onChange={changePrice}\r\n//                     />\r\n//                     <CustomTextInput label=\"Phone Number\" name=\"status\" type=\"text\" placeholder=\"35\"\r\n//                     // onChange={changePrice}\r\n//                     />\r\n//           <button type=\"submit\">\r\n//             {props.isSubmitting ? 'Adding..': 'Submits'}</button>\r\n//           </div>\r\n          \r\n//         </Form>\r\n\r\n//       )}\r\n//     </Formik>\r\n\r\n\r\n//     )\r\n// }\r\n\r\n\r\n// export default AddPack;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './Adder.css'\r\n\r\nasync function AddPack(values) {\r\n\r\n    fetch('/package',{\r\n      method: 'POST',\r\n      body:JSON.stringify({\r\n        package_id: values.package_id,\r\n          delivDate: values.deliv_date,\r\n          client: values.client,\r\n          status:values.status,\r\n      }),\r\n      headers:{\r\n          \"Content-type\": \"application/json; charset=UTF-8\"\r\n      }\r\n  }).then(response => response.json())\r\n  .then(message => {\r\n      console.log(message)\r\n  })\r\n   }\r\n\r\n\r\n\r\nexport default function AddForm({}) {\r\n    const [package_id, setPackage_id] = useState();\r\n    const [client, setClient] = useState();\r\n    const [deliv_date, setDeliv_date] = useState();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const token = await AddPack({\r\n            package_id,\r\n            client,\r\n            deliv_date,\r\n        });\r\n        // setToken(token);\r\n        // console.log('adssad')\r\n      }\r\n\r\n        return (\r\n\r\n        <div className='form-box'>\r\n            <h1>Add A Package to System</h1>\r\n            <div className='login-wrapper'>\r\n                <div className='image'>\r\n                    {/* <img src={loginImg}/> */}\r\n                </div>\r\n            <form onSubmit={handleSubmit}>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='package_id'>Package Name</label>\r\n                                <input type='text' name='package_id' placeholder='Package  Name' onChange={e => setPackage_id(e.target.value)}/>\r\n                            </div>\r\n                            <div className='form-group'>\r\n                                <label htmlFor='client'>Client Name</label>\r\n                                <input type='text' name='client' placeholder='client name' onChange={e => setClient(e.target.value)}/>\r\n                                \r\n                            </div>\r\n                            \r\n                            <div className='form-group'>\r\n                                <label htmlFor='deliv_date'>Delivery Date</label>\r\n                                <input type='date' name='deliv_date' placeholder='deliv_date' onChange={e => setDeliv_date(e.target.value)}/>\r\n                            </div>\r\n                            \r\n                            <div>\r\n                            <button type=\"submit\">Add Client</button>\r\n                            </div>\r\n            </form>\r\n            </div>\r\n            \r\n        </div>)\r\n    \r\n}\r\n","import React from 'react'\r\nimport '../../App.css'\r\nimport AddPack from '../AddPack'\r\n\r\nfunction Package() {\r\n\r\n\r\n    return(\r\n        <>\r\n        <AddPack/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Package;","import React, {useState, useEffect} from 'react'\r\n// import axios from \"axios\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\"\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport {Modal, Button} from \"react-bootstrap\";\r\n// import jsonData from './data3.json';\r\n// import {variables} from '../Variables'\r\n\r\n\r\nconst Pagination = () => {\r\n    const [players, stplayers] = useState([]);\r\n    const [modalInfo, setModalInfo] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const  [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    \r\n    useEffect(()=>{\r\n        fetch(\"/clients\").then(\r\n            res => res.json()\r\n        ).then(\r\n            data=> {\r\n                stplayers(data)\r\n                console.log(data)\r\n            }\r\n        )\r\n    },[])\r\n    const getPlayerData = async () => {\r\n\r\n        try{\r\n            // const data = await axios.get(\r\n\r\n            // )\r\n            \r\n            // fetch(variables.CLIENTS_URL)\r\n            // .then(response =>response.json())\r\n            // .then(data=>stPlayers(data))\r\n        }\r\n        catch (e){\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\nuseEffect(() => {\r\n     getPlayerData();\r\n    // return () => {\r\n    //     cleanup\r\n    // }\r\n}, []);\r\n\r\nconst columns =[\r\n    // {dataField: \"Invoice\", text: \"Invoice ID\"},\r\n    {dataField: \"Client\", sort: true, text: \"Client Name\"},\r\n    {dataField: \"address\", sort: true, text: \"Address\"},\r\n    {dataField: \"email\", sort: true, text: \"Email Address\"},\r\n    {dataField: \"phonenmb\", sort: true, text: \"Number\"},\r\n    \r\n    \r\n]\r\n\r\nconst rowEvents ={\r\n    onClick: (e,row)=>  {\r\n       console.log(row) \r\n       setModalInfo(row);\r\n       toggleTrueFalse();\r\n    }\r\n}\r\nconst toggleTrueFalse = () => {\r\n    setShowModal(handleShow);\r\n}\r\n\r\nconst ModalContent = () => {\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{modalInfo.client_id}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* <h4>Invoice: {modalInfo.Invoice}</h4>\r\n                <h4>Salesperson: {modalInfo.Salesperson}</h4>\r\n                <h4>Tax: {modalInfo.Tax}</h4>\r\n                <h4>Pay Status: {modalInfo.Status}</h4>\r\n                <h4>Date: {modalInfo.Date}</h4>\r\n\r\n                <h2>Amount: {modalInfo.Amount}</h2> */}\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n    return(\r\n        <div>\r\n        <h1>List of Clients</h1>\r\n        <BootstrapTable\r\n        keyField=\"name\"\r\n        data={players}\r\n        columns={columns}\r\n        pagination={paginationFactory()}\r\n        rowEvents={rowEvents}/>\r\n\r\n        {show ? <ModalContent/> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React from 'react'\r\nimport '../../App.css'\r\nimport Pagination from '../Paginated'\r\n\r\nfunction ClientView() {\r\n\r\n\r\n    return(\r\n        <>\r\n        <Pagination/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ClientView;","import React from 'react'\r\nimport '../../App.css'\r\nimport PaginDeliv from '../PaginDeliv'\r\n\r\nfunction DeliverView() {\r\n\r\n\r\n    return(\r\n        <>\r\n        <PaginDeliv/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default DeliverView;","import React from 'react'\r\nimport '../../App.css'\r\nimport PaginPack from '../PaginPack'\r\n\r\nfunction PackageView() {\r\n\r\n\r\n    return(\r\n        <>\r\n        <PaginPack/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PackageView;","import React, {useState, useEffect} from 'react'\r\n// import axios from \"axios\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\"\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport {Modal, Button} from \"react-bootstrap\";\r\n// import jsonData from './data3.json';\r\n// import {variables} from '../Variables'\r\n\r\n\r\nconst Pagination = () => {\r\n    const [players, stplayers] = useState([]);\r\n    const [modalInfo, setModalInfo] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const  [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    \r\n    useEffect(()=>{\r\n        fetch(\"/movers\").then(\r\n            res => res.json()\r\n        ).then(\r\n            data=> {\r\n                stplayers(data)\r\n                console.log(data)\r\n            }\r\n        )\r\n    },[])\r\n    const getPlayerData = async () => {\r\n\r\n        try{\r\n            // const data = await axios.get(\r\n\r\n            // )\r\n            \r\n            // fetch(variables.CLIENTS_URL)\r\n            // .then(response =>response.json())\r\n            // .then(data=>stPlayers(data))\r\n        }\r\n        catch (e){\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\nuseEffect(() => {\r\n     getPlayerData();\r\n    // return () => {\r\n    //     cleanup\r\n    // }\r\n}, []);\r\n\r\nconst columns =[\r\n    // {dataField: \"Invoice\", text: \"Invoice ID\"},\r\n    {dataField: \"mover_id\", sort: true, text: \"Mover Name\"},\r\n    {dataField: \"date\", sort: true, text: \"Join Date\"},\r\n    {dataField: \"address\", sort: true, text: \"Address\"},\r\n    {dataField: \"email\", sort: true, text: \"Email Address\"},\r\n    {dataField: \"phonenmb\", sort: true, text: \"Number\"},\r\n    \r\n    \r\n]\r\n\r\nconst rowEvents ={\r\n    onClick: (e,row)=>  {\r\n       console.log(row) \r\n       setModalInfo(row);\r\n       toggleTrueFalse();\r\n    }\r\n}\r\nconst toggleTrueFalse = () => {\r\n    setShowModal(handleShow);\r\n}\r\n\r\nconst ModalContent = () => {\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{modalInfo.mover_id}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* <h4>Invoice: {modalInfo.Invoice}</h4>\r\n                <h4>Salesperson: {modalInfo.Salesperson}</h4>\r\n                <h4>Tax: {modalInfo.Tax}</h4>\r\n                <h4>Pay Status: {modalInfo.Status}</h4>\r\n                <h4>Date: {modalInfo.Date}</h4>\r\n\r\n                <h2>Amount: {modalInfo.Amount}</h2> */}\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n    return(\r\n        <div>\r\n        <h1>List of Movers</h1>\r\n        <BootstrapTable\r\n        keyField=\"name\"\r\n        data={players}\r\n        columns={columns}\r\n        pagination={paginationFactory()}\r\n        rowEvents={rowEvents}/>\r\n\r\n        {show ? <ModalContent/> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React from 'react'\r\nimport '../../App.css'\r\nimport PaginMover from '../PaginMover'\r\n\r\nfunction MoverView() {\r\n\r\n\r\n    return(\r\n        <>\r\n        <PaginMover/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default MoverView;","import React, {useState, useEffect} from 'react'\r\n// import axios from \"axios\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\"\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport {Modal, Button} from \"react-bootstrap\";\r\n// import jsonData from './data3.json';\r\n// import {variables} from '../Variables'\r\n\r\n\r\nconst Pagination = () => {\r\n    const [players, stplayers] = useState([]);\r\n    const [modalInfo, setModalInfo] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const  [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    \r\n    useEffect(()=>{\r\n        fetch(\"/routes\").then(\r\n            res => res.json()\r\n        ).then(\r\n            data=> {\r\n                stplayers(data)\r\n                console.log(data)\r\n            }\r\n        )\r\n    },[])\r\n    const getPlayerData = async () => {\r\n\r\n        try{\r\n            // const data = await axios.get(\r\n\r\n            // )\r\n            \r\n            // fetch(variables.CLIENTS_URL)\r\n            // .then(response =>response.json())\r\n            // .then(data=>stPlayers(data))\r\n        }\r\n        catch (e){\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\nuseEffect(() => {\r\n     getPlayerData();\r\n    // return () => {\r\n    //     cleanup\r\n    // }\r\n}, []);\r\n\r\nconst columns =[\r\n    {dataField: \"route_id\", sort: true, text: \"Route Name\"},\r\n    {dataField: \"start\", sort: true, text: \"Start Point\"},\r\n    {dataField: \"end\", sort: true, text: \"Destination\"},\r\n    {dataField: \"milestones\", sort: true, text: \"Milestones\"},\r\n    \r\n    \r\n]\r\n\r\nconst rowEvents ={\r\n    onClick: (e,row)=>  {\r\n       console.log(row) \r\n       setModalInfo(row);\r\n       toggleTrueFalse();\r\n    }\r\n}\r\nconst toggleTrueFalse = () => {\r\n    setShowModal(handleShow);\r\n}\r\n\r\nconst ModalContent = () => {\r\n    return (\r\n        \r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{modalInfo.route_id}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* <h4>Invoice: {modalInfo.Invoice}</h4>\r\n                <h4>Salesperson: {modalInfo.Salesperson}</h4>\r\n                <h4>Tax: {modalInfo.Tax}</h4>\r\n                <h4>Pay Status: {modalInfo.Status}</h4>\r\n                <h4>Date: {modalInfo.Date}</h4>\r\n\r\n                <h2>Amount: {modalInfo.Amount}</h2> */}\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n    return(\r\n        <div>\r\n        <h1>List of Routes</h1>\r\n        <BootstrapTable\r\n        keyField=\"name\"\r\n        data={players}\r\n        columns={columns}\r\n        pagination={paginationFactory()}\r\n        rowEvents={rowEvents}/>\r\n\r\n        {show ? <ModalContent/> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React from 'react'\r\nimport '../../App.css'\r\nimport PaginRoute from '../PaginRoute'\r\n\r\nfunction RouteView() {\r\n\r\n\r\n    return(\r\n        <>\r\n        <PaginRoute/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default RouteView;","// // import logo from './logo.svg';\nimport Navbar from'./components/Navbar';\nimport React, { useState } from 'react';\nimport Navbar2 from'./components/Navbar2';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Login from './components/pages/login'\nimport './App.css';\nimport Home from './components/pages/Home'\nimport Client from './components/pages/Client'\nimport Mover from './components/pages/Mover'\nimport Delivery from './components/pages/Delivery'\nimport Package from './components/pages/Package'\nimport ClientView from './components/pages/ClientView'\nimport DeliveryView from './components/pages/DeliveryView'\nimport PackageView from './components/pages/PackageView'\nimport MoverView from './components/pages/MoverView'\nimport RouteView from './components/pages/RouteView'\nimport useToken from './components/useToken';\n\n\n\nfunction setToken(userToken) {\n  sessionStorage.setItem('token', JSON.stringify(userToken));\n\n}\n\nfunction getToken() {\n\n  const tokenString = sessionStorage.getItem('token');\n  const userToken = JSON.parse(tokenString);\n  return userToken?.token\n\n}\n\n\n\nfunction App() {\n\n\n  const { token, setToken } = useToken();\n\n\n  \n\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n\n  if(token == 'client') {\n    return (\n      <Router>\n        <Navbar2>\n          <Switch>\n        <Route path='/' exact component= {Package}/>\n        {/* <Route path='/pack' exact component= {Package}/> */}\n        <Route path='/delivs' exact component= {Delivery}/>\n\n          </Switch>\n        </Navbar2>\n      </Router>\n    )\n  }\n\n  return (\n    <Router>\n        {/* <Route path='/' exact component= {Login}/> */}\n      <Navbar/>\n      <Switch>\n        <Route path='/' exact component= {Home}/>\n        <Route path='/clientele' exact component= {Client}/>\n        <Route path='/moverr' exact component= {Mover}/>\n        <Route path='/pack' exact component= {Package}/>\n        <Route path='/delivs' exact component= {Delivery}/>\n        <Route path='/clients' exact component= {ClientView}/>\n        <Route path='/delivss' exact component= {DeliveryView}/>\n        <Route path='/packs' exact component= {PackageView}/>\n        <Route path='/movers' exact component= {MoverView}/>\n        <Route path='/routess' exact component= {RouteView}/>\n\n        {/* <Route path='/planning' exact component= {Planner}/>\n        <Route path='/workers' exact component= {Workers}/> */}\n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    const tokenString = sessionStorage.getItem('token');\r\n    const userToken = JSON.parse(tokenString);\r\n    return userToken?.token\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    sessionStorage.setItem('token', JSON.stringify(userToken));\r\n    setToken(userToken.token);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}